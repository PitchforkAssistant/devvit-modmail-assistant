import {SettingsClient} from "@devvit/public-api";
import {SETTING_DEFAULTS} from "./defaults.js";

export type RawAppSettings = {
    highlighterEnabled?: boolean;
    highlighterAdmins?: boolean;
    highlighterContributors?: boolean;
    highlighterUsernames?: string;
    highlighterFlairs?: string;
    highlighterSubreddits?: boolean;
    highlighterNoSents?: boolean;
    highlighterNoAutoGens?: boolean;
    archiverEnabled?: boolean;
    archiverNoHighlighteds?: boolean;
    archiveLastReplyUser?: number;
    archiveLastReplyMod?: number;
    archiveAutoGenerated?: number;
    modmailMentionsEnabled?: boolean;
    modmailMentionsOnlyMods?: boolean;
    modmailMentionsOnlyOnce?: boolean;
    modmailMentionsNoQuotes?: boolean;
};

export type AppSettings = {
    highlighterEnabled: boolean;
    highlighterAdmins: boolean;
    highlighterContributors: boolean;
    highlighterUsernames: string[];
    highlighterFlairs: string[];
    highlighterSubreddits: boolean;
    highlighterNoSents: boolean;
    highlighterNoAutoGens: boolean;
    archiverEnabled: boolean;
    archiverNoHighlighteds: boolean;
    archiveLastReplyUser: number;
    archiveLastReplyMod: number;
    archiveAutoGenerated: number;
    modmailMentionsEnabled: boolean;
    modmailMentionsOnlyMods: boolean;
    modmailMentionsOnlyOnce: boolean;
    modmailMentionsNoQuotes: boolean;
};

export async function getAppSettings (settings: SettingsClient): Promise<AppSettings> {
    const rawSettings = await settings.getAll<RawAppSettings>();

    const appSettings: AppSettings = {
        highlighterEnabled: rawSettings.highlighterEnabled ?? SETTING_DEFAULTS.highlighterEnabled,
        highlighterAdmins: rawSettings.highlighterAdmins ?? SETTING_DEFAULTS.highlighterAdmins,
        highlighterContributors: rawSettings.highlighterContributors ?? SETTING_DEFAULTS.highlighterContributors,
        highlighterUsernames: (rawSettings.highlighterUsernames ?? SETTING_DEFAULTS.highlighterUsernames).toLowerCase().split(","),
        highlighterFlairs: (rawSettings.highlighterFlairs ?? SETTING_DEFAULTS.highlighterFlairs).toLowerCase().split(","),
        highlighterSubreddits: rawSettings.highlighterSubreddits ?? SETTING_DEFAULTS.highlighterSubreddits,
        highlighterNoSents: rawSettings.highlighterNoSents ?? SETTING_DEFAULTS.highlighterNoSents,
        highlighterNoAutoGens: rawSettings.highlighterNoAutoGens ?? SETTING_DEFAULTS.highlighterNoAutoGens,
        archiverEnabled: rawSettings.archiverEnabled ?? SETTING_DEFAULTS.archiverEnabled,
        archiverNoHighlighteds: rawSettings.archiverNoHighlighteds ?? SETTING_DEFAULTS.archiverNoHighlighteds,
        archiveLastReplyUser: rawSettings.archiveLastReplyUser ?? SETTING_DEFAULTS.archiveLastReplyUser,
        archiveLastReplyMod: rawSettings.archiveLastReplyMod ?? SETTING_DEFAULTS.archiveLastReplyMod,
        archiveAutoGenerated: rawSettings.archiveAutoGenerated ?? SETTING_DEFAULTS.archiveAutoGenerated,
        modmailMentionsEnabled: rawSettings.modmailMentionsEnabled ?? SETTING_DEFAULTS.modmailMentionsEnabled,
        modmailMentionsOnlyMods: rawSettings.modmailMentionsOnlyMods ?? SETTING_DEFAULTS.modmailMentionsOnlyMods,
        modmailMentionsOnlyOnce: rawSettings.modmailMentionsOnlyOnce ?? SETTING_DEFAULTS.modmailMentionsOnlyOnce,
        modmailMentionsNoQuotes: rawSettings.modmailMentionsNoQuotes ?? SETTING_DEFAULTS.modmailMentionsNoQuotes,
    };

    appSettings.highlighterUsernames.forEach(username => username.trim());
    appSettings.highlighterFlairs.forEach(flair => flair.trim());

    return appSettings;
}
